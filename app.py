import streamlit as st
import pandas as pd
import joblib

# 12. chargement de modele dans l'application
model = joblib.load('modele_aqi.pkl')

# 13. Cr√©ation de l‚Äôinterface utilisateur avec Streamlit

# a. Cat√©gorisation de l‚ÄôAQI
def categorize_aqi_india(aqi):

    if 0 <= aqi <= 50:
        return "Good üü¢" 
    elif 51 <= aqi <= 100:
        return "Satisfactory üü°" 
    elif 101 <= aqi <= 200:
        return "Moderately polluted üü†" 
    elif 201 <= aqi <= 300:
        return "Poor üî¥" 
    elif 301 <= aqi <= 400:
        return "Very Poor üü£" 
    elif 401 <= aqi <= 500:
        return "Severe ‚ö´" 
    else:
        return "Beyond Index ‚ùå"  # aqi<0 ou aqi>500 hors de l'echelle d√©finie par l'autorit√© indienne (0 √† 500) 
    
# b. Conseils de sant√©
def get_health_advice_en(aqi):
    if 0 <= aqi <= 50:
        return "üåø Air quality is good. No precautions needed."
    elif 51 <= aqi <= 100:
        return "üôÇ Acceptable air quality, but sensitive individuals may feel mild effects."
    elif 101 <= aqi <= 200:
        return "‚ö†Ô∏è Limit prolonged outdoor activity if you have respiratory issues."
    elif 201 <= aqi <= 300:
        return "üò∑ People with lung or heart disease should avoid outdoor exertion."
    elif 301 <= aqi <= 400:
        return "üö´ Everyone should reduce physical activity outdoors."
    elif 401 <= aqi <= 500:
        return "üõë Health alert: Avoid outdoor activities and stay indoors."
    else:
        return "‚ùì Invalid AQI value."


# c. Design Streamlit/ Titre de la page 
#st.title("Pr√©diction de l'AQI en Inde")
st.set_page_config(page_title="AQI India Predictor", page_icon="üåÄ", layout="centered")
st.markdown("## üåÄ Air Quality Index (AQI) Prediction in India")
st.markdown("Enter the average pollutant values to estimate the air quality according to the Indian national AQI standard üáÆüá≥.")

st.markdown("---")

# d. Interface utilisateur
st.markdown("### üì• Input Pollutant Levels")
# Curseurs pour chaque polluant
pm25 = st.slider("PM2.5 (¬µg/m¬≥)", 0.0, 500.0, 50.0) #max value est d√©fini en fonction des valeurs maximales du dataset (df.describe) et de celles recommand√©es pour chaque polluant.
pm10 = st.slider("PM10 (¬µg/m¬≥)", 0.0, 500.0, 50.0)
no2 = st.slider("NO2 (¬µg/m¬≥)", 0.0, 500.0, 30.0)
nh3 = st.slider("NH3 (¬µg/m¬≥)", 0.0, 500.0, 20.0)
so2 = st.slider("SO2 (¬µg/m¬≥)", 0.0, 500.0, 20.0)
co = st.slider("CO (mg/m¬≥)", 0.0, 500.0, 1.0)
ozone = st.slider("OZONE (¬µg/m¬≥)", 0.0, 500.0, 30.0)

# e. Pr√©diction sur bouton
st.markdown("### üîç AQI Prediction")
st.write("Click on the button to predict the AQI based on pollutant levels.")
if st.button("Predict AQI"):
    input_data = [[pm25, pm10, no2, nh3, so2, co, ozone]]
    prediction = model.predict(input_data)[0]
    category = categorize_aqi_india(prediction)
    st.info(get_health_advice_en(prediction))

    st.write(f" üìä Predicted AQI : {prediction:.2f}")
    st.write(f"üß™Air Quality: {category}")


# f. Ajout d'informations pour l'utilisateur
## explication sur l'AQI : What is AQI?
st.markdown("##### ‚ÑπÔ∏è Understanding the Air Quality Index (AQI)")
with st.expander("What is AQI?"):
    st.markdown("""
The **Air Quality Index (AQI)** is a numerical scale used to communicate the level of air pollution in a specific area.  
It is calculated based on the concentrations of key air pollutants such as: **PM2.5, PM10, NO‚ÇÇ, SO‚ÇÇ, CO, and O‚ÇÉ**.

Here's how to understand the AQI values:
*AQI values are based on India's National Air Quality Standards.*
                
- üü¢ **0‚Äì50** : Good ‚Äì air quality is considered satisfactory.  
- üü° **51‚Äì100** : Satisfactory ‚Äì may affect very sensitive individuals.  
- üü† **101‚Äì200** : Moderate ‚Äì sensitive people should reduce long outdoor activities.  
- üî¥ **201‚Äì300** : Poor ‚Äì may cause health effects for everyone.  
- üü£ **301‚Äì400** : Very Poor ‚Äì serious health impact after prolonged exposure.  
- ‚ö´ **401‚Äì500** : Severe ‚Äì hazardous for all, avoid outdoor activity.
""")

#14. d√©ploiement web :
# lancer le WebApp avec streamlit : 
# dans le terminal: streamlit run app.py